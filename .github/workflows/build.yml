---
# yaml-language-servzer: $schema=https://json.schemastore.org/github-workflow.json
name: Build GTKWave

on:
    push:
    schedule:
        - cron: 0 0 * * *  # nightly
    workflow_dispatch:
        inputs:
            debug_enabled:
                type: boolean
                description: Run the build with tmate debugging enabled (https://github.com/marketplace/actions/debugging-with-tmate)
                required: false
                default: false

jobs:

    msys2:
        if: false  # disable for mac testing
        runs-on: windows-latest
        strategy:
            fail-fast: false
            max-parallel: 2
            matrix:
                target:
                    - {msys2: MINGW32, arch: i686}
                    - {msys2: MINGW64, arch: x86_64}
                gtk: [2, 3]
        continue-on-error: true
        defaults:
            run:
                shell: msys2 {0}
        env:
            MINGW_INSTALLS: ${{ matrix.target.msys2 }}
        steps:

            - run: git config --global core.autocrlf input
              shell: bash

            - uses: actions/checkout@v2

            - uses: msys2/setup-msys2@v2
              with:
                  update: true
                  install: >
                      base-devel
                      git
                      mingw-w64-${{ matrix.target.arch }}-toolchain
                      mingw-w64-${{ matrix.target.arch }}-autotools
                  msystem: ${{ matrix.target.msys2 }}

            - name: Build package
              working-directory: MSYS2/gtk${{ matrix.gtk }}
              run: |
                  tries=0
                  # Try building three times due to the arbitrary 'Bad address' error
                  while [ $tries -lt 3 ]; do
                    makepkg-mingw --noconfirm --noprogressbar -sCLfc && exit 0
                    tries=$((tries+1))
                  done
                  exit 1

            - name: Install and create standalone package
              working-directory: ./MSYS2/gtk${{ matrix.gtk }}
              run: |
                  pacman -U --noconfirm mingw-*gtkwave*.pkg.tar.zst
                  mv mingw-*gtkwave*.pkg.tar.zst ../../
                  ../standalone_pkg.sh

            - uses: actions/upload-artifact@v2
              with:
                  path: |
                      mingw-*gtkwave*.pkg.tar.zst
                      gtkwave_*_standalone.tgz

    nightly:
        if: false # disable for mac testing
        # if: github.ref == 'refs/heads/master' && github.event_name != 'pull_request'
        needs: [msys2]
        runs-on: ubuntu-latest
        steps:
            - uses: actions/download-artifact@v2
            - uses: eine/tip@master
              with:
                  token: ${{ secrets.GITHUB_TOKEN }}
                  tag: nightly
                  rm: true
                  files: artifact/*

    mac-app:
        runs-on: macos-latest
        defaults:
            run:
                working-directory: build
        steps:
            # Enable tmate debugging of manually-triggered workflows if the input option was provided
            - name: Setup tmate session
              uses: mxschmitt/action-tmate@v3
              if: ${{ github.event_name == 'workflow_dispatch' && inputs.debug_enabled }}
              with:
                  limit-access-to-actor: true
            - name: Make build dir
              run: mkdir build
              working-directory: .
            - name: Checkout Repository
              uses: actions/checkout@v3
            - name: Cache
              uses: actions/cache@v3.2.2
              with:
                  path: /nix/store
                  key: ${{ runner.os }}-gtkwave-mac-app
            - name: Install Nix
              uses: cachix/install-nix-action@v18
              with:
                  extra_nix_config: |
                      extra-platforms = x86_64-darwin aarch64-darwin
                      experimental-features = nix-command flakes
